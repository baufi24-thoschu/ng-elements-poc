# This is a basic workflow to help you get started with Actions

name: DEVELOP ðŸ’¡ [Test]

# Controls when the workflow will run
on:
#  push:
#    branches:
#      - develop

  pull_request:
    branches:
      - develop

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'verbose'
      tags:
        description: 'Test scenario tags'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  test:
    name: Test job
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 15.x ]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Dependencies
        run: npm ci

      - name: Linting
        run: |
          npm run linting

      - name: Unit-Tests
        run: |
          npm test

      - name: e2e-Tests
        run: npm run test:e2e

      - name: Archive e2e-Test
        if: success()
        uses: actions/upload-artifact@v2
        with:
          name: cypress_dist
          path: |
            dist/cypress

  build:
    name: Build job
    runs-on: ubuntu-latest
    needs: [ test ]

    env:
      name: ${{ github.actor }}

    strategy:
      matrix:
        #node-version: [ 12.x, 14.x, 15.x ]
        node-version: [ 15.x ]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Dep
        run: npm ci

      - name: Build webcomponents
        run: npm run build --if-present

      - name: Archive webcomponents
        if: success()
        uses: actions/upload-artifact@v2
        with:
          name: webcomponebt_dist
          path: |
            dist/apps

  publish:
    name: Publish webcomponents to gh npm registry
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: webcomponebt_dist
          path: downloaded_artifact_deploy_dist

      - name: Display structure of downloaded files
        run: ls -ahl
        working-directory: downloaded_artifact_deploy_dist

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://npm.pkg.github.com/

      - run: npm version prerelease --preid=ci-$GITHUB_RUN_ID --no-git-tag-version
      - run: npm pack
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: package
          path: "*.tgz"

      - name: Display structure of directory
        run: ls -ahl
        working-directory: ./

#      - name: Publish
#        run: |
#          npm version prerelease --preid=ci-$GITHUB_RUN_ID --no-git-tag-version
#          npm publish --access public
#        env:
#          NODE_AUTH_TOKEN: ${{secrets.NPM_PUBLISH}}
